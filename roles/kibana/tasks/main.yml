---
- name: Install dependencies
  apt:
    name: ['apt-transport-https', 'wget', 'gnupg']
    state: present
    update_cache: yes

- name: Add Elastic GPG key
  shell: |
    wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | gpg --dearmor -o /etc/apt/keyrings/elastic.gpg
  args:
    creates: /etc/apt/keyrings/elastic.gpg

- name: Add Kibana APT repo
  copy:
    content: |
      deb [signed-by=/etc/apt/keyrings/elastic.gpg] https://artifacts.elastic.co/packages/{{ kibana_major_version }}.x/apt stable main
    dest: /etc/apt/sources.list.d/elastic.list

# - name: Install Kibana
#   apt:
#     name: kibana={{ kibana_version }}
#     state: present
#     update_cache: yes



- name: Manually install Kibana (as a workaround)
  shell: |
    apt-get update && apt-get install -y kibana={{ kibana_version }}
  args:
    executable: /bin/bash
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Configure kibana.yml
  template:
    src: kibana.yml.j2
    dest: /etc/kibana/kibana.yml
    owner: root
    group: kibana
    mode: 0640

- name: Ensure elasticsearch.username is set in Kibana config on vm2
  lineinfile:
    path: /etc/kibana/kibana.yml
    line: 'elasticsearch.username: "kibana_system"'
    state: present
  when: inventory_hostname == "vm2"
  become: yes

- name: Create Kibana keystore if not exists
  command: /usr/share/kibana/bin/kibana-keystore create
  args:
    creates: /etc/kibana/kibana.keystore
  become: yes
  when: inventory_hostname == "vm2"

- name: Add kibana_system password to Kibana keystore
  shell: |
    printf '{{ kibana_system_password }}\n' | /usr/share/kibana/bin/kibana-keystore add elasticsearch.password --stdin
  become: yes
  when: inventory_hostname == "vm2"


- name: Enable and restart Kibana
  systemd:
    name: kibana
    enabled: yes
    state: restarted
